---
- name: Ensure ps util is installed
  ansible.builtin.yum:
    name: procps-ng # For zkServer.sh

- name: Ensure {{ zookeeper_group_name }} group exists
  ansible.builtin.group:
    name: "{{ zookeeper_group_name }}"
    system: yes
  when: zookeeper_create_group

- name: Ensure {{ zookeeper_user_name }} user exists
  ansible.builtin.user:
    name: "{{ zookeeper_user_name }}"
    group: "{{ zookeeper_group_name }}"
    createhome: no
    system: yes
  when: zookeeper_create_user

- name: Ensure {{ zookeeper_base_dir }} directory exists
  ansible.builtin.file:
    path: "{{ zookeeper_base_dir }}"
    state: directory
    owner: "{{ zookeeper_user_name }}"
    group: "{{ zookeeper_group_name }}"
    mode: "0755"

- name: Download Zookeeper {{ zookeeper_version }} distro
  ansible.builtin.get_url:
    url: "{{ zookeeper_distro_url }}"
    dest: "{{ zookeeper_base_dir }}/{{ zookeeper_distro_file }}"
    owner: "{{ zookeeper_user_name }}"
    group: "{{ zookeeper_group_name }}"
    mode: "644"

- name: Unarchive Zookeeper {{ zookeeper_version }} distro
  ansible.builtin.unarchive:
    src: "{{ zookeeper_base_dir }}/{{ zookeeper_distro_file }}"
    dest: "{{ zookeeper_base_dir }}"
    remote_src: yes
    creates: "{{ zookeeper_base_dir }}/apache-zookeeper-{{ zookeeper_version }}-bin"
    owner: "{{ zookeeper_user_name }}"
    group: "{{ zookeeper_group_name }}"

- name: Ensure required symlinks exist
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
    owner: "{{ zookeeper_user_name }}"
    group: "{{ zookeeper_group_name }}"
  loop:
    - src: "{{ zookeeper_base_dir }}/apache-zookeeper-{{ zookeeper_version }}-bin"
      dest: "{{ zookeeper_home_dir }}"
    - src: "{{ zookeeper_home_dir }}/conf"
      dest: "{{ zookeeper_conf_dir }}"

- name: Ensure required directories exist
  ansible.builtin.file:
    dest: "{{ item }}"
    state: directory
    owner: "{{ zookeeper_user_name }}"
    group: "{{ zookeeper_group_name }}"
    mode: "0755"
  loop:
    - "{{ zookeeper_log_dir }}"
    - "{{ zookeeper_data_dir }}"
    - "{{ zookeeper_ssl_dir }}"

- name: Ensure required config files are present
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ zookeeper_user_name }}"
    group: "{{ zookeeper_group_name }}"
    mode: "{{ item.mode }}"
  notify: Restart zookeeper service
  loop:
    - src: zoo.cfg.j2
      dest: "{{ zookeeper_conf_dir }}/zoo.cfg"
      mode: "0640"
    - src: java.env.j2
      dest: "{{ zookeeper_conf_dir }}/java.env"
      mode: "0644"

- name: Include Zookeeper SSL configuration
  ansible.builtin.include_tasks: ssl.yml

- name: Ensure myid is set
  ansible.builtin.copy:
    dest: "{{ zookeeper_data_dir }}/myid"
    content: "{{ zookeeper_id }}"
    owner: "{{ zookeeper_user_name }}"
    group: "{{ zookeeper_group_name }}"
    mode: "0644"
  notify: Restart zookeeper service

- name: Ensure zookeeper systemd unit is present
  ansible.builtin.template:
    src: "{{ zookeeper_service_name }}.j2"
    dest: "/etc/systemd/system/{{ zookeeper_service_name }}"
    owner: "{{ zookeeper_user_name }}"
    group: "{{ zookeeper_group_name }}"
    mode: "0644"

- name: Ensure zookeeper service is {{ zookeeper_service_state }} and {{ zookeeper_service_enabled | ternary('enabled', 'disabled') }} on boot
  ansible.builtin.systemd:
    name: "{{ zookeeper_service_name }}"
    state: "{{ zookeeper_service_state }}"
    enabled: "{{ zookeeper_service_enabled }}"

- name: Ensure PATH variable contains {{ zookeeper_home_dir }}/bin directory
  ansible.builtin.copy:
    dest: "/etc/profile.d/zookeeper.sh"
    content: "export PATH=$PATH:{{ zookeeper_home_dir }}/bin"
    owner: "{{ zookeeper_user_name }}"
    group: "{{ zookeeper_group_name }}"
    mode: "0644"
